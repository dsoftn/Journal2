{
  "AllowMultipleLogins": {
    "key": "AllowMultipleLogins",
    "value": "True",
    "defaultValue": "True",
    "min": "Null",
    "max": "Null",
    "settingType": 8,
    "dataType": 128,
    "description": "Allow already loged user to login on another instance of application.",
    "creationDate": "2024.12.23 16:52:00",
    "userData": ""
  },
  "DatabaseTables": {
    "key": "DatabaseTables",
    "value": "CREATE TABLE IF NOT EXISTS blocks (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL, date TEXT NOT NULL, text TEXT NOT NULL, text_style TEXT NOT NULL, draft INTEGER NOT NULL, block_type TEXT NOT NULL, created TEXT NOT NULL, updated TEXT NOT NULL, default_attachment INTEGER NOT NULL);\nCREATE TABLE IF NOT EXISTS actors (id INTEGER PRIMARY KEY AUTOINCREMENT, nick TEXT NOT NULL, name TEXT NOT NULL, description TEXT NOT NULL, created TEXT NOT NULL, updated TEXT NOT NULL, default_attachment INTEGER NOT NULL);\nCREATE TABLE IF NOT EXISTS tags (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL, description TEXT NOT NULL, scope INTEGER NOT NULL, created TEXT NOT NULL, default_attachment INTEGER NOT NULL);\nCREATE TABLE IF NOT EXISTS categories (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL, description TEXT NOT NULL, parent INTEGER NOT NULL, created TEXT NOT NULL, default_attachment INTEGER NOT NULL);\nCREATE TABLE IF NOT EXISTS attachments (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL, description TEXT NOT NULL, type INTEGER NOT NULL, is_supported INTEGER NOT NULL, source TEXT NOT NULL, source_type INTEGER NOT NULL, downloaded INTEGER NOT NULL, created TEXT NOT NULL, file_path TEXT NOT NULL, file_size TEXT NOT NULL, file_created TEXT NOT NULL, file_modified TEXT NOT NULL, file_accessed TEXT NOT NULL);\nCREATE TABLE IF NOT EXISTS relations (id INTEGER PRIMARY KEY, base_model INTEGER NOT NULL, base_id INTEGER NOT NULL, related_model INTEGER NOT NULL, related_id INTEGER NOT NULL, description TEXT NOT NULL, created TEXT NOT NULL);\nCREATE TABLE IF NOT EXISTS definitions_variants (id INTEGER PRIMARY KEY, text TEXT NOT NULL, definition_id INTEGER NOT NULL, match_case INTEGER NOT NULL);\nCREATE TABLE IF NOT EXISTS definitions (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL, description TEXT NOT NULL, source TEXT NOT NULL, source_type INTEGER NOT NULL, created TEXT NOT NULL, updated TEXT NOT NULL, default_attachment INTEGER NOT NULL);\nCREATE TABLE IF NOT EXISTS blocks_diary (id INTEGER PRIMARY KEY AUTOINCREMENT, base_block_id INTEGER NOT NULL, show_def_attachment INTEGER NOT NULL, text TEXT NOT NULL, text_style TEXT NOT NULL);",
    "defaultValue": "CREATE TABLE IF NOT EXISTS blocks (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL, date TEXT NOT NULL, text TEXT NOT NULL, text_style TEXT NOT NULL, draft INTEGER NOT NULL, block_type TEXT NOT NULL, created TEXT NOT NULL, updated TEXT NOT NULL, default_attachment INTEGER NOT NULL);\nCREATE TABLE IF NOT EXISTS actors (id INTEGER PRIMARY KEY AUTOINCREMENT, nick TEXT NOT NULL, name TEXT NOT NULL, description TEXT NOT NULL, created TEXT NOT NULL, updated TEXT NOT NULL, default_attachment INTEGER NOT NULL);\nCREATE TABLE IF NOT EXISTS tags (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL, description TEXT NOT NULL, scope INTEGER NOT NULL, created TEXT NOT NULL, default_attachment INTEGER NOT NULL);\nCREATE TABLE IF NOT EXISTS categories (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL, description TEXT NOT NULL, parent INTEGER NOT NULL, created TEXT NOT NULL, default_attachment INTEGER NOT NULL);\nCREATE TABLE IF NOT EXISTS attachments (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL, description TEXT NOT NULL, type INTEGER NOT NULL, is_supported INTEGER NOT NULL, source TEXT NOT NULL, source_type INTEGER NOT NULL, downloaded INTEGER NOT NULL, created TEXT NOT NULL, file_path TEXT NOT NULL, file_size TEXT NOT NULL, file_created TEXT NOT NULL, file_modified TEXT NOT NULL, file_accessed TEXT NOT NULL);\nCREATE TABLE IF NOT EXISTS relations (id INTEGER PRIMARY KEY, base_model INTEGER NOT NULL, base_id INTEGER NOT NULL, related_model INTEGER NOT NULL, related_id INTEGER NOT NULL, description TEXT NOT NULL, created TEXT NOT NULL);\nCREATE TABLE IF NOT EXISTS definitions_variants (id INTEGER PRIMARY KEY, text TEXT NOT NULL, definition_id INTEGER NOT NULL, match_case INTEGER NOT NULL);\nCREATE TABLE IF NOT EXISTS definitions (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL, description TEXT NOT NULL, source TEXT NOT NULL, source_type INTEGER NOT NULL, created TEXT NOT NULL, updated TEXT NOT NULL, default_attachment INTEGER NOT NULL);\nCREATE TABLE IF NOT EXISTS blocks_diary (id INTEGER PRIMARY KEY AUTOINCREMENT, base_block_id INTEGER NOT NULL, show_def_attachment INTEGER NOT NULL, text TEXT NOT NULL, text_style TEXT NOT NULL);",
    "min": "Null",
    "max": "Null",
    "settingType": 8,
    "dataType": 4,
    "description": "SQL commands to create table structure in database.",
    "creationDate": "2025.01.03 21:56:26",
    "userData": ""
  },
  "DefVariantDefaultMatchCase": {
    "key": "DefVariantDefaultMatchCase",
    "value": "False",
    "defaultValue": "False",
    "min": "None",
    "max": "None",
    "settingType": 8,
    "dataType": 128,
    "description": "It determines whether to look at upper and lower case letters.",
    "creationDate": "2025.01.17 15:36:38",
    "userData": ""
  },
  "AllowAnimateAddingBlockGeneral": {
    "key": "AllowAnimateAddingBlockGeneral",
    "value": "True",
    "defaultValue": "True",
    "min": "None",
    "max": "None",
    "settingType": 8,
    "dataType": 128,
    "description": "Adding base Block can be animated.",
    "creationDate": "2025.02.05 16:11:03",
    "userData": ""
  },
  "AnimateAddingBlockGeneralDuration": {
    "key": "AnimateAddingBlockGeneralDuration",
    "value": "1.0",
    "defaultValue": "1.0",
    "min": "0",
    "max": "30",
    "settingType": 8,
    "dataType": 64,
    "description": "Duration in seconds while animating base Block in process of adding to layout.",
    "creationDate": "2025.02.05 16:13:40",
    "userData": ""
  },
  "AllowAnimateRemovingBlockGeneral": {
    "key": "AllowAnimateRemovingBlockGeneral",
    "value": "True",
    "defaultValue": "True",
    "min": "Null",
    "max": "Null",
    "settingType": 8,
    "dataType": 128,
    "description": "Removing base Block can be animated.",
    "creationDate": "2025.02.05 17:56:04",
    "userData": ""
  },
  "AnimateRemovingBlockGeneralDuration": {
    "key": "AnimateRemovingBlockGeneralDuration",
    "value": "0.5",
    "defaultValue": "0.5",
    "min": "0.0",
    "max": "30.0",
    "settingType": 8,
    "dataType": 64,
    "description": "Duration in seconds while animating base Block in process of removing from layout.",
    "creationDate": "2025.02.05 17:56:34",
    "userData": ""
  },
  "BlockTypeBackgroundUNDEFINED": {
    "key": "BlockTypeBackgroundUNDEFINED",
    "value": "-fx-background-color: rgb(43, 6, 6);",
    "defaultValue": "-fx-background-color: rgb(43, 6, 6);",
    "min": "None",
    "max": "None",
    "settingType": 8,
    "dataType": 4,
    "description": "CSS settings for backround if BlockType is UNDEFINED",
    "creationDate": "2025.02.05 20:06:05",
    "userData": ""
  },
  "BlockTypeBackgroundDIARY": {
    "key": "BlockTypeBackgroundDIARY",
    "value": "-fx-background-color: linear-gradient(to bottom, #2c2c54, #202040, #1b1b2f);",
    "defaultValue": "-fx-background-color: linear-gradient(to bottom, #2c2c54, #202040, #1b1b2f);",
    "min": "None",
    "max": "None",
    "settingType": 8,
    "dataType": 4,
    "description": "CSS settings for backround if BlockType is DIARY",
    "creationDate": "2025.02.05 20:07:46",
    "userData": ""
  },
  "CssBlockTypeBackgroundUNDEFINED": {
    "key": "CssBlockTypeBackgroundUNDEFINED",
    "value": "-fx-background-color: rgb(43, 6, 6);",
    "defaultValue": "-fx-background-color: rgb(43, 6, 6);",
    "min": "None",
    "max": "None",
    "settingType": 8,
    "dataType": 4,
    "description": "CSS settings for backround if BlockType is UNDEFINED",
    "creationDate": "2025.02.05 22:36:42",
    "userData": ""
  },
  "CssBlockTypeBackgroundDIARY": {
    "key": "CssBlockTypeBackgroundDIARY",
    "value": "-fx-background-color: linear-gradient(to bottom, #2c2c54, #202040, #1b1b2f);",
    "defaultValue": "-fx-background-color: linear-gradient(to bottom, #2c2c54, #202040, #1b1b2f);",
    "min": "None",
    "max": "None",
    "settingType": 8,
    "dataType": 4,
    "description": "CSS settings for backround if BlockType is DIARY",
    "creationDate": "2025.02.05 22:36:53",
    "userData": ""
  },
  "MaxLastCount": {
    "key": "MaxLastCount",
    "value": "5",
    "defaultValue": "5",
    "min": "1",
    "max": "100",
    "settingType": 8,
    "dataType": 8,
    "description": "Maximum number of last used items",
    "creationDate": "2025.02.11 19:06:48",
    "userData": ""
  },
  "MaxMostCount": {
    "key": "MaxMostCount",
    "value": "5",
    "defaultValue": "5",
    "min": "1",
    "max": "100",
    "settingType": 8,
    "dataType": 8,
    "description": "Maximum number of most used items",
    "creationDate": "2025.02.11 19:07:05",
    "userData": ""
  },
  "SelectionLastMost_MaxChars": {
    "key": "SelectionLastMost_MaxChars",
    "value": "30",
    "defaultValue": "30",
    "min": "1",
    "max": "300",
    "settingType": 8,
    "dataType": 8,
    "description": "Maximum number of most used items",
    "creationDate": "2025.02.12 21:00:29",
    "userData": ""
  },
  "Selection_ImageHeight": {
    "key": "Selection_ImageHeight",
    "value": "30",
    "defaultValue": "30",
    "min": "5",
    "max": "10000",
    "settingType": 8,
    "dataType": 8,
    "description": "Image height of icon displayed left by item name",
    "creationDate": "2025.02.12 23:19:22",
    "userData": ""
  },
  "Selection_ImageWidth": {
    "key": "Selection_ImageWidth",
    "value": "30",
    "defaultValue": "30",
    "min": "5",
    "max": "10000",
    "settingType": 8,
    "dataType": 8,
    "description": "Image height of icon displayed left by item name",
    "creationDate": "2025.02.12 23:19:32",
    "userData": ""
  }
}